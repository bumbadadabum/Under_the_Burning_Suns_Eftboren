#textdomain wesnoth-utbs

#define HYDRATING_TILES
W*,W*^*,*^Do,*^V* #enddef

#define NEUTRAL_TILES
S*,Gg^F*,Gs^F*,G*,U*,C*,K* #enddef

#define DEHYDRATABLE_UNIT_FILTER
    {NOT_ON_RECALL_LIST}
    [not]
        type=Giant Scorpion
    [/not]
    [not]
        type=Mudcrawler
    [/not]
    [not]
        type=Giant Mudcrawler
    [/not]
    [not]
        type=Mother Mudcrawler
    [/not]
    [not]
        race=undead
    [/not]
    [not]
        race=elvish_spirits
    [/not]
    [not]
        race=bats
    [/not]
    [not]
        [filter_wml]
            ai_special=guardian
        [/filter_wml]
    [/not]
    [not]
        [filter_wml]
            [status]
                not_living=yes
            [/status]
        [/filter_wml]
    [/not]
    [not]
        [filter_wml]
            [variables]
                immune_to_dehydration=yes
            [/variables]
        [/filter_wml]
    [/not]
#enddef

#define SHOW_DEHYDRATION_HELP
    [fire_event]
        name=dehydration_logic_description
    [/fire_event]
#enddef

#define DEHYDRATION_EVENTS
    [event]
        name=prestart

        {VARIABLE dehydration_loss 4}

        [set_menu_item]
            id=wmi_dehydration_helptxt
            description= _ "Dehydration"
            image="icons/menu-dehydration.png"
            [command]
                [redraw][/redraw]

                [allow_undo][/allow_undo]

                {SHOW_DEHYDRATION_HELP}
            [/command]
        [/set_menu_item]
    [/event]

    [event]
        name=dehydration_logic_description
        first_time_only=no

        [message]
            speaker=narrator
            message= _ "During the daytime (Dawn, Morning, Midday, Afternoon, and Dusk) at the beginning of each your turns, every unit on sand, road, dune, hills or mountains hexes will suffer from thirst. Each turn of thirst reduces a unitâ€™s attack damage and causes $dehydration_loss hitpoints of damage. Only by being cared for by a healer or refreshing at villages or non-swamp water hexes at the start of your turn will your units regain full attack strength."
        [/message]
    [/event]

#define APPLY_DEHYDRATION_EFFECT FILTER
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        kill=no
        variable=dehydrating_units
    [/store_unit]

    {FOREACH dehydrating_units i}
        {VARIABLE dehydrating_units[$i].resting no}

        [if]
            [have_unit]
                x,y=$dehydrating_units[$i].x,$dehydrating_units[$i].y

                [filter_adjacent]
                    is_enemy=no
                    [and]
                        ability=healing
                        [or]
                            ability=curing
                        [/or]
                    [/and]
                [/filter_adjacent]
            [/have_unit]

            [then]
                {VARIABLE dehydrating_units[$i].status.dehydration_slowed_by_healer yes}

                [unstore_unit]
                    variable=dehydrating_units[$i]
                    find_vacant=no
                [/unstore_unit]
            [/then]

            [else]
                {FOREACH dehydrating_units[$i].attack j}
                    # if dehydrating for the first time, store the original attack stats
                    [if]
                        [variable]
                            name=dehydrating_units[$i].status.dehydrated
                            not_equals=yes
                        [/variable]

                        [then]
                            {VARIABLE dehydrating_units[$i].variables.original_attack[$j].damage $dehydrating_units[$i].attack[$j].damage}
                        [/then]
                    [/if]

                    # the attack's damage drops by 1 point, but cannot drop to zero
                    [if]
                        [variable]
                            name=dehydrating_units[$i].attack[$j].damage
                            greater_than=1
                        [/variable]

                        [then]
                            {VARIABLE_OP dehydrating_units[$i].attack[$j].damage add -1}
                        [/then]
                    [/if]
                {NEXT j}

                # unit's hitpoints drop by $dehydration_loss, but cannot kill it
                [if]
                    [variable]
                        name=dehydrating_units[$i].hitpoints
                        greater_than=$dehydration_loss
                    [/variable]
                    [then]
                        {VARIABLE_OP dehydrating_units[$i].hitpoints add -$dehydration_loss}
                    [/then]
                    [else]
                        {VARIABLE dehydrating_units[$i].hitpoints 1}
                    [/else]
                [/if]

                {VARIABLE dehydrating_units[$i].status.dehydrated yes}

                [if]
                    [variable]
                        name=dehydrating_units[$i].gender
                        equals=female
                    [/variable]
                    [then]
                        {VARIABLE temp_dehydration_text _"female^dehydrated"}
                    [/then]
                    [else]
                        {VARIABLE temp_dehydration_text _"dehydrated"}
                    [/else]
                [/if]

                [unstore_unit]
                    variable=dehydrating_units[$i]
                    find_vacant=no
                    text=$temp_dehydration_text
                    {COLOR_HARM}
                [/unstore_unit]

                [unit_overlay]
                    x,y=$dehydrating_units[$i].x,$dehydrating_units[$i].y
                    image="misc/dehydration-icon.png"
                [/unit_overlay]

                {CLEAR_VARIABLE temp_dehydration_text}
            [/else]
        [/if]
    {NEXT i}

    {CLEAR_VARIABLE dehydrating_units}
#enddef

#define APPLY_HYDRATION_EFFECT FILTER
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        kill=no
        variable=hydrating_units
    [/store_unit]

    {FOREACH hydrating_units i}
        [if]
            [variable]
                name=hydrating_units[$i].status.dehydrated
                equals=yes
            [/variable]

            [then]
                {FOREACH hydrating_units[$i].attack j}
                    {VARIABLE hydrating_units[$i].attack[$j].damage $hydrating_units[$i].variables.original_attack[$j].damage}
                {NEXT j}
            [/then]
        [/if]

        {VARIABLE hydrating_units[$i].status.dehydrated no}

        [if]
            [variable]
                name=hydrating_units[$i].gender
                equals=female
            [/variable]
            [then]
                {VARIABLE temp_hydration_text _"female^refreshed"}
            [/then]
            [else]
                {VARIABLE temp_hydration_text _"refreshed"}
            [/else]
        [/if]

        [unstore_unit]
            variable=hydrating_units[$i]
            find_vacant=no
            text=$temp_hydration_text
            {COLOR_HEAL}
        [/unstore_unit]

        [remove_unit_overlay]
            x,y=$hydrating_units[$i].x,$hydrating_units[$i].y
            image="misc/dehydration-icon.png"
        [/remove_unit_overlay]

        {CLEAR_VARIABLE temp_hydration_text}
    {NEXT i}

    {CLEAR_VARIABLE hydrating_units}
#enddef


    [event]
        name=side 1 turn
        first_time_only=no

        {APPLY_DEHYDRATION_EFFECT (
            side=$side_number
            {DEHYDRATABLE_UNIT_FILTER}
            [filter_location]
                [not]
                    terrain={HYDRATING_TILES}
                [/not]
                [not]
                    terrain={NEUTRAL_TILES}
                [/not]
                [not]
                    time_of_day=chaotic
                [/not]
            [/filter_location]
        )}

        {APPLY_HYDRATION_EFFECT (
            side=$side_number
            {DEHYDRATABLE_UNIT_FILTER}
            [filter_wml]
                [status]
                    dehydrated=yes
                [/status]
            [/filter_wml]
            [and]
                [filter_location]
                    terrain={HYDRATING_TILES}
                [/filter_location]
                [or]
                    [filter_adjacent]
                        is_enemy=no
                        [and]
                            ability=healing
                            [or]
                                ability=curing
                            [/or]
                        [/and]
                    [/filter_adjacent]
                [/or]
            [/and]
        )}
    [/event]

    [event]
        name=side 1 turn refresh
        first_time_only=no

        {MODIFY_UNIT (
            side=1
            [filter_wml]
                [status]
                    dehydration_slowed_by_healer=yes
                [/status]
            [/filter_wml]
        ) status.dehydration_slowed_by_healer no}
    [/event]

    [event]
        name=advance
        first_time_only=no
        [filter]
            side=1
            [filter_wml]
                [status]
                    dehydrated=yes
                [/status]
            [/filter_wml]
        [/filter]

        [if]
            [variable]
                name=$unit.gender
                equals=female
            [/variable]
            [then]
                {VARIABLE temp_hydration_text _"female^refreshed"}
            [/then]
            [else]
                {VARIABLE temp_hydration_text _"refreshed"}
            [/else]
        [/if]

        {VARIABLE unit.status.dehydrated no}

        [unstore_unit]
            variable=unit
            find_vacant=no
            text=$temp_hydration_text
            {COLOR_HEAL}
        [/unstore_unit]

        [remove_unit_overlay]
            x,y=$unit.x,$unit.y
            image="misc/dehydration-icon.png"
        [/remove_unit_overlay]

        {CLEAR_VARIABLE temp_hydration_text}
    [/event]

    [event]
        name=victory

        {APPLY_HYDRATION_EFFECT (
            side=1
            {DEHYDRATABLE_UNIT_FILTER}
            [filter_wml]
                [status]
                    dehydrated=yes
                [/status]
            [/filter_wml]
        )}

        {CLEAR_VARIABLE dehydration_loss}

        {REMOVE_MENU_ITEM wmi_dehydration_helptxt}
    [/event]
#enddef

#define DO_NOT_DEHYDRATE
    [+unit]
        [variables]
            immune_to_dehydration=yes
        [/variables]
    [/unit]
#enddef

#define DEHYDRATION_NOTE
    {OBJECTIVE_NOTE ( _ "Living units are subject to dehydration in this scenario")}
#enddef
